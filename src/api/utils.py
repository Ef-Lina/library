"""–ú–æ–¥—É–ª—å –¥–ª—è –≤—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã—Ö –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ API."""
from fastapi import Depends, APIRouter
from fastapi.security.oauth2 import OAuth2PasswordBearer
from typing_extensions import Annotated
from src.auth.auth_handler import get_current_user
from src.models.users import UserModel

router = APIRouter(tags=["–í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã üî®Ô∏è"])

oauth2_scheme = OAuth2PasswordBearer(tokenUrl="auth/login")

@router.get("/test-auth")
def show_access_token(token: str = Depends(oauth2_scheme)):
    """–ü–æ–∫–∞–∑–∞—Ç—å —Ç–æ–∫–µ–Ω –¥–æ—Å—Ç—É–ø–∞."""
    return {"token": token}

@router.get("/me", response_model=int,
            summary="–ü–æ–ª—É—á–∏—Ç—å ID –≤–æ—à–µ–¥—à–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
def read_users_me(current_user: Annotated[UserModel, Depends(get_current_user)]):
    """–ü–æ–ª—É—á–∏—Ç—å ID —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è."""
    return current_user.user_id
